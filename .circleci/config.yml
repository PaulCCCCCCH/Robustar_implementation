version: 2.1

jobs:
  frontend-test:
    docker:
      - image: cimg/node:14.17.6
    steps:
      - checkout
      - run:
          name: Run Frontend Tests
          working_directory: ./front-end
          command: | # Placeholder her
            echo "Files in directory: $(ls)"
            echo "Placeholder for running frontend tests!"

  backend-test:
    docker:
      - image: cimg/python:3.10.5
    steps:
      - checkout
      - run:
          name: Run Backend Tests
          working_directory: ./back-end
          command: | # Placeholder here
            echo "Files in directory: $(ls)"
            echo "Placeholder for running backend tests!"
 
  build-image:
    docker:
      - image: cimg/node:14.17.6
    steps:
      - checkout # clone github repo
      - run:
          name: Display files and git status
          command: | 
            echo "Current working directory: $(pwd)"
            ls -al
            echo '^^^^^^^^^^^^^ Files cloned from repo'
            echo 'Current Branch: $(git branch --show-current)'
            echo 'Commit: $(git rev-parse HEAD)'
      - run:
          name: Download dependencies
          working_directory: ./front-end
          command: |
            echo "Files in directory: $(ls)"
            echo "node version: $(node -v)"
            echo "npm version: $(npm -v)"
            npx lerna@latest init
            npm install
            npx lerna bootstrap
            npx lerna run build

      - run:
          name: Build frontend
          working_directory: ./front-end
          command: |
            ls -al
      - setup_remote_docker
      - when: # When having a dev build
          condition:
            not:
              equal: [ main, << pipeline.git.branch >> ]          
          steps:
            - run: 
                name: Build And Push Dev Docker Image
                # We have to have this blob of command and repeat it twice because CircleCI does not support sharing variables between steps.
                # Try using custom executor? 
                command: |
                  chmod +x ./scripts/install_pytorch.sh
                  echo 'export IMAGE_TAG=${VERSION_MAJOR}.${VERSION_MINOR}_${CIRCLE_BRANCH}_$(git rev-parse --short HEAD)' >> $BASH_ENV
                  source $BASH_ENV
                  echo "Current working directory: $(pwd)"
                  echo "Files in directory: $(ls)"
                  docker build -t $DOCKERHUB_USERNAME/$DOCKERHUB_REPO_NAME:$IMAGE_TAG --build-arg VCUDA=cpu .
                  echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
                  docker push $DOCKERHUB_USERNAME/$DOCKERHUB_REPO_NAME:$IMAGE_TAG

      - when: # When having a release build
          condition:
            equal: [ main, << pipeline.git.branch >> ] 
          steps:
            - run:
                name: Build And Push Docker Image For Release
                command: | 
                  chmod +x ./scripts/install_pytorch.sh
                  echo 'export IMAGE_TAG=${VERSION_MAJOR}.${VERSION_MINOR}.${CIRCLE_BUILD_NUM}' >> $BASH_ENV
                  source $BASH_ENV
                  echo "Current working directory: $(pwd)"
                  echo "Files in directory: $(ls)"
                  docker build -t $DOCKERHUB_USERNAME/$DOCKERHUB_REPO_NAME:$IMAGE_TAG --build-arg VCUDA=cpu .
                  echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
                  docker push $DOCKERHUB_USERNAME/$DOCKERHUB_REPO_NAME:$IMAGE_TAG


workflows:
  robustar-workflow:
    jobs:
      - frontend-test
      - backend-test
      - build-image:
          requires:
            - frontend-test
            - backend-test